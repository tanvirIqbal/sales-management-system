@page "/orders"
@using SMS.Shared.Models;
@inject HttpClient http
@inject IJSRuntime jsRuntime
<PageTitle>Orders</PageTitle>
<h3>Orders</h3>
<a href="/order/add" class="btn btn-secondary my-2">Add more</a>
@if (orders != null && orders.Count > 0)
{
    <div class="row">
        <div class="col-md-6">

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>State</th>
                        <th>Action</th>
                    </tr>
                </thead>
                @foreach (var order in orders)
                {
                    <tbody>
                        <tr>
                            <td>@order.Name</td>
                            <td>@order.State</td>
                            <td>
                                <a href="/order/edit/@order.Id" class="btn btn-success">Edit</a>
                                <a class="btn btn-danger" @onclick="async ()=> await Delete(order)">Delete</a>
                            </td>
                        </tr>
                    </tbody>
                }
            </table>
        </div>
    </div>
}

@code {
    private List<Order> orders = new();


    private async Task Delete(Order order)
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            var result = await http.DeleteFromJsonAsync<Status>($"api/order/delete/{order.Id}");
            if (result.StatusCode == 1)
                await GetOrders();

        }
    }

    private async Task GetOrders(int pageNo = 1)
    {
        orders = await http.GetFromJsonAsync<List<Order>>($"api/order/getall");
    }

    protected override async Task OnInitializedAsync()
    {
        await GetOrders();
    }

}
